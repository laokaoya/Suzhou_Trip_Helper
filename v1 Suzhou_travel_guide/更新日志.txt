4/12以前：准备阶段
4/12 第一次会议，确定备选选题
4/13 第二次会议，确定选题、目标、算法、任务、分工等，完成ppt
4/16 熟悉数据库，确定筛选信息和方法
4/17 根据数据库和网上信息筛选总结首版苏州景点列表并分类
4/18 ①创建景区信息列表②解决数据库中的问题③完成景点标注和聚类
4/19 ①得到起点和终点站点表 ②完善景区信息表（介绍、开放时间、特色...) ③窗口及选项搭建完毕④整体框架初步搭建，解决地图展示问题 ⑤设计函数的提纲
4/20 ①实现了遗传算法最短路线（有瑕疵）②地图上加入聚类颜色标注 ③加入起点和终点特定图标及文字 ④完成图标设置和文字介绍
4/21 设计第一版函数，包括游览时间、交通、价格、距离
4/22 ①完善第一版函数，设计并实现评分指标（价格、热度、拥堵）②根据偏好类型设计四类计算公式
4/23 ①尝试edge driver实现tkinter直接呈现地图结果，但损失了交互性 ②调整函数的系数，加入高价格惩罚
4/24 完善tkinter地图显示的大小和位置；调整地图中心点和放大倍数
4/25 ①修改函数参数②调整最短路线遗传算法参数③尝试flask框架在网页实现动态地图（失败）④完成首版饭店+酒店信息表格
4/26 地图界面引入day x选项，完成按照景点数均分每日路线
4/27 完善day x选项，实现每日路线颜色区分，实现按路径长度分配旅游路线
4/28 第三次会议，①调整游览数目公式 ②完善按路径长度分配旅游路线，考虑每日连接线段与起点终点问题 ③解决0.5/1天bug（待解决：最短路线bug）
4/29 最短路线算法修改，解决起点终点距离过长问题
5/02 修改框架为Pyqt5，实现同一窗口显示动态地图
5/04 修改添加旅馆饭馆数据，添加新的景点数据并核实每个景点所在位置
5/05 旅馆表更新，平均地图各处旅馆点位分布
5/06 旅馆数据加入总路线，并绘制带旅馆的聚类地图
5/08 旅馆数据加入每日图层，并只显示每天结束点的旅馆
5/14 删改范围外的景点和旅馆
5/15 添加旅店、饭店数据并使覆盖所有景点
5/16 饭店数据加入每日图层，并按距离设置出现
5/17 更改饭店和旅店图标，修改饭店选择逻辑变为每日所有景点距离较近的15个以内
5/20 更新景点信息表；第四次会议